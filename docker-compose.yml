services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - main
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api:
    build: .
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DJANGO_DEBUG: ${DJANGO_DEBUG}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src/media:/src/media
    networks:
      - main

  nginx:
    build: ./nginx
    ports:
      - "8080:8080"
    depends_on:
      - api
    volumes:
      - ./src/media:/src/media
    networks:
      - main

  redis:
    image: redis:6
    networks:
      - main


volumes:
  postgres_data:

networks:
  main:
    driver: bridge